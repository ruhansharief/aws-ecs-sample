AWSTemplateFormatVersion: 2010-09-09
Description: Provisions an ECS cluster and supporting IAM roles.

Parameters:
  NamingPrefix:
    Type: String
    
  Image:
    Type: String
    Default: 219308536655.dkr.ecr.us-east-1.amazonaws.com/flask-app
    
  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The private subnets list
    
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  
  LoadBalancerTargetGroupArn:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup



Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${NamingPrefix}-ecs-cluster"
      Tags:
        - Key: Name
          Value: !Sub "${NamingPrefix}-ecs-cluster"
          
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${NamingPrefix}-ecs-task-execution-role"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Policies:
        - PolicyName: !Sub "${NamingPrefix}-ecs-task-execution-role-policy"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "secretsmanager:GetSecretValue"
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${NamingPrefix}-ecs-task-execution-role"   
          
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      Memory: 1024
      Cpu: 512
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "flask-container"
          Image: !Ref Image
          MemoryReservation: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 5000
              Protocol: tcp  
              
  ECSService:
    Type: AWS::ECS::Service
    Properties: 
      ServiceName: !Sub "${NamingPrefix}-ecs-service"
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref ECSTaskDefinition
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 4
      HealthCheckGracePeriodSeconds: 30
      LaunchType: FARGATE
      NetworkConfiguration: 
        AwsvpcConfiguration:
          #AssignPublicIp: DISABLED
          Subnets: !Ref PrivateSubnets
          SecurityGroups:
            - !Ref ECSSecurityGroup
      LoadBalancers:
        - ContainerName: !GetAtt ECSTaskDefinition.ContainerDefinitions.Name
          ContainerPort: !GetAtt ECSTaskDefinition.ContainerDefinitions.PortMappings.ContainerPort
          TargetGroupArn: !Ref LoadBalancerTargetGroupArn
          LoadBalancerName: !Ref LoadBalancer
